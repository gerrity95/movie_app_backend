version: '3'

services:

  flask_backend:
        image: python_backend:0.0.1
        build: 
          context: .
          dockerfile: ./Dockerfile_Python
        volumes: 
            - .:/usr/src/app/
        ports: 
            - 5000:5000
        depends_on:
          - rabbitmq
        environment: 
            PORT: 5000
            FLASK_DEBUG: 1
            PYTHONUNBUFFERED: 1
        restart: unless-stopped
        networks:
          - app-network
        command: python -u flask_app.py
  rmq_client:
        image: python_backend:0.0.1
        build: 
          context: .
          dockerfile: ./Dockerfile_Python
        volumes: 
            - .:/usr/src/app/
        ports: 
            - 5001:5001
        depends_on:
          - rabbitmq
        environment: 
            PORT: 5001
            FLASK_DEBUG: 1
            PYTHONUNBUFFERED: 1
        restart: unless-stopped
        networks:
          - app-network
        command: python -u async_rmq.py

  db:
    image: mongo
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
    - ME_CONFIG_MONGODB_SERVER=db
    - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_USERNAME
    - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_PASSWORD
    - ME_CONFIG_BASICAUTH_USERNAME=$MONGO_USERNAME
    - ME_CONFIG_BASICAUTH_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata
    depends_on:
      - db
    networks:
      - app-network
    ports:
      - 8081:8081
    restart: always

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
        - RABBITMQ_DEFAULT_USER=$RMQ_USER
        - RABBITMQ_DEFAULT_PASS=$RMQ_PASSWORD
        - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=+S 1:1
    ports:
        # AMQP protocol port
        - '5672:5672'
        # HTTP management UI
        - '15672:15672'
    networks:
        - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata: